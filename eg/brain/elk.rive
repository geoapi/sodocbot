! version = 2.0

+ hello bot
- Hello human.

+ my name is *
- <set name=<formal>>Nice to meet you, <get name>.


+ *
- I don't have a reply for that.
- Try asking that a different way. I am designed to tell things about API Topics e.g. get posts for facebook api

> object await-me javascript
	var timeout = args[0];
	var message = args[1];

	// Example of an asynchronous object macro which returns a promise instead
	// of a string.
	return new Promise(function(resolve, reject) {
		setTimeout(function() {
			resolve(message);
		}, timeout*1000);
	});
< object
+ wait # seconds
- <call>await-me <star> "You waited <star> seconds for this response!"</call>

+ cat * and *
- <call> cati <star1> <star2> </call>

> object cati javascript
 var a = args[0];
 var b = a+ args[1];
 return b
< object


+ get posts for api *
- <call>sendData <star> </call>

+ get me posts for * api
- <call>sendData <star> </call>

+ get me posts for api *
- <call>sendData <star> </call>


+ return posts for * api
- <call>sendData <star> </call>


> object sendData javascript
    var xhr = new XMLHttpRequest();
    var url = 'https://cors.io/?http://35.244.98.50:9200/question/so/_search?q=api:'+ args[0]
    xhr.open('GET',url);
    return(url)
    xhr.onload = function() {
        if (xhr.status === 200) {
            alert('content ' + xhr.responseText);
        }
        else {
            alert('Request failed.  Returned status of ' + xhr.status);
        }
    };
    xhr.send();
   //return('Ok, see the popup') 
< object




+ i am interested in * topic
- <set topicname=<formal>> A Nice topic is <get topicname>.

+my topic is *
- <set topicname=<formal>> Many users like <get topicname> topic

+ i chose * api
- <set apiname=<formal>> Many users use <get apiname> 
+ my api is *
- <set apiname=<formal>> Many users use <get apiname> 


> object getStats javascript
    var xhr = new XMLHttpRequest();

    var url = 'https://cors.io/?http://35.244.98.50:9200/question/so/_search?q=api:'+ args[0]
    xhr.open('GET',url);
    return(url)
    xhr.onload = function() {
        if (xhr.status === 200) {
            alert('content ' + xhr.responseText);
        }
        else {
            alert('Request failed.  Returned status of ' + xhr.status);
        }
    };
    xhr.send();
   //return('Ok, see the popup')
< object

// ok for alert
+ get posts for * api related to * topic
- <call> jquery1 <star1> <star2> </call>
> object jquery1 javascript
var payload = {"query":{"bool":{"must":[ {"match":{"topic":args[1]}}, {"match":{"api":args[0]}}]}}};
jQuery.support.cors = true;
// execute request
$.ajax({
    type: "POST",
    url: "http://35.244.98.50:9200/question/so/_search",
    data: JSON.stringify(payload), // elastic filter
    dataType: "json",
    contentType: "application/json;charset=UTF-8",
    processData: false,
    success: function(data) {
        //console.log(data),
       alert(JSON.stringify(data))
        
    },
    error: function(xhr, ajaxOptions, thrownError) {
        console.log(xhr);
    }
});
< object




//it works!
+ test
- <call>test</call>
> object test javascript

const proxyurl = "https://cors.io/?";
const url = "http://35.244.98.50:9200/question/so/_search";

fetch(proxyurl + url) 
.then(response => response.text())
.then(contents => alert(contents))
.catch(() => console.log("Can’t access " + url + " response. Blocked by browser?"))
< object


// CORS PROBLEMS! 405 error
+ fetch * and *
- <call>fetch <star1> <star2> </call>
> object fetch javascript

const proxyurl = "https://cors.io/?";
const url = "http://35.244.98.50:9200/question/so/_search";
var payload = {"query":{"bool":{"must":[ {"match":{"topic":args[1]}}, {"match":{"api":args[0]}}]}}};
console.log(payload);
fetch(proxyurl + url, {
    method: 'post',
    body: JSON.stringify(payload)
  },{mode: 'cors'})
.then(response => response.text())
.then(contents => alert(contents))
.catch(() => console.log("Can’t access " + url + " response. Blocked by browser?"))
< object

//this works perfectly with no cors or whatsover , Ya Shakoor
+ jquery * and *
- <call> jquery <star1> <star2> </call>
> object jquery javascript
var payload = {"query":{"bool":{"must":[ {"match":{"topic":args[1]}}, {"match":{"api":args[0]}}]}}};
jQuery.support.cors = true;
// execute request
$.ajax({
    type: "POST",
    url: "http://35.244.98.50:9200/question/so/_search",
    data: JSON.stringify(payload), // elastic filter
    dataType: "json",
    contentType: "application/json;charset=UTF-8",
    processData: false,
    success: function(data) {
        console.log(data),
	alert(JSON.stringify(data))
    },
    error: function(xhr, ajaxOptions, thrownError) {
        console.log(xhr);
    }
});
< object

+ get posts for * api and * topic
- <call> jquery2 <star1> <star2> </call>
> object jquery2 javascript
var payload = {"query":{"bool":{"must":[ {"match":{"topic":args[1]}}, {"match":{"api":args[0]}}]}}};
jQuery.support.cors = true;

function getdata(payload){
 return $.ajax({
    type: "POST",
    url: "http://35.244.98.50:9200/question/so/_search",
    data: JSON.stringify(payload), // elastic filter
    dataType: "json",
    contentType: "application/json;charset=UTF-8"})
//  ,async: false
}


function callGetData(payload){
var content = getdata(payload);
content.done(function(data){
alert(JSON.stringify(data))
});
}

callGetData(payload)
return ('ok')
< object
